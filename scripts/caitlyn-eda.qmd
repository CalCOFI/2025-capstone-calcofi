# Part I [Ignore]
## Importing data (dates are wrong i think)

```{r, eval =F}

# Read in oceanographic bottle data
hydro_bottle <- read_csv(here::here(
  "data/calcofi_hydro_bottle/194903-202105_Bottle.csv"),
   # change encoding
   locale=locale(encoding="latin1"),
   # increase guess_max to correctly guess column types
   guess_max = Inf
)

# Read in cast data
cast_bottle <- read_csv(here::here("data/calcofi_hydro_bottle/194903-202105_Cast.csv"))

# Read in carbonate chemistry bottle data
cc_bottle <- read_csv(here::here("data/carbonate_chem_bottle.csv"))

# Drop first row (containing units) of carbonate chemistry bottle data
cc_bottle <- cc_bottle[2:nrow(cc_bottle),]

# Merge oceanographic and cast data based on Cst_Cnt (Cast Count) and Sta_ID (Station ID)
hydro_bottle <- hydro_bottle %>%
  left_join(
    cast_bottle,
    by = join_by(Cst_Cnt, Sta_ID)
  )

# Prepare carbonate chemistry data for merging
cc_bottle <- cc_bottle %>%
  # Create new date column for merging
  mutate(
    Date = paste(Month_UTC, Day_UTC, Year_UTC, sep = "/"),
    .before = Year_UTC
  ) %>%
  # Change column types for merging
  mutate(
    Depth = as.double(Depth)
  )

# Merge carbonate chemistry and oceanographic bottle data based on date, location, and depth
merged_bottle_data <- inner_join(
  cc_bottle, 
  hydro_bottle,
  by = join_by(Date, Depth == Depthm, Station_ID == Sta_ID)
  )

# Save merged data
write_csv(merged_bottle_data, here::here("data/merged_bottle_data.csv"))
```

# Part IIb (Krill data)
## Merging carbonate chemistry dataset with krill dataset

```{r}
library(readr)
# Read in carbonate chemistry bottle data
cc_data <- read_csv(here::here("data/carbonate_chem_bottle.csv"))
cc_data <- cc_data[2:nrow(cc_data),]
krill_data <- read_csv(here::here("data/krill_data/BTEDB_Abundances.csv"))
head(cc_data)
head(krill_data)
```
Station ID (combining "Line" and "Station" variables in krill dataset to match CC dataset)

```{r}
# unique(cc_bottle$Station_ID)  # Unique Station_IDs
# unique(krill_data$Line)       # Unique Lines
# unique(krill_data$Station)    # Unique Stations

krill_data$Formatted_Line <- sprintf("%05.1f", krill_data$Line)

krill_data$Station <- as.numeric(krill_data$Station)
krill_data$Formatted_Station <- sprintf("%05.1f", krill_data$Station)

# krill_data$Station_ID <- paste(krill_data$Formatted_Line, krill_data$Formatted_Station, sep = " ")
# 
# krill_data <- cbind(Station_ID = krill_data$Station_ID, krill_data)

krill_data <- krill_data %>%
  mutate(
    Station_ID = paste(krill_data$Formatted_Line, krill_data$Formatted_Station, sep = " "),
    .before = Line
  )

head(krill_data)
```

Date (creating new Date variable in cc data to match krill data)

```{r}
# cc_data$Date <- as.Date(with(cc_data, paste(Year_UTC, Month_UTC, Day_UTC, sep = "-")), format = "%Y-%m-%d")
# 
# cc_data <- cbind(Date = cc_data$Date, cc_data)

cc_data <- cc_data %>%
  mutate(
    Date = as.Date(with(cc_data, paste(Year_UTC, Month_UTC, Day_UTC, sep = "-")), format = "%Y-%m-%d"),
    .before = Year_UTC
  )

head(cc_data)

```

Convert "Depth" variable in cc dataset to numeric

```{r}
cc_data$Depth <- as.numeric(cc_data$Depth)
head(cc_data)
```

```{r}
head(cc_data)
head(krill_data)
```

Merge datasets by Date, Station_ID, and Depth
```{r}
merged_cc_krill_data <- inner_join(
  cc_data, 
  krill_data,
  by = join_by(Date, Station_ID)
  )

head(merged_cc_krill_data)

nrow(merged_cc_krill_data)

write_csv(merged_cc_krill_data, here::here("data/merged_krill_data.csv"))
```

# EDA

```{r}
library(ggplot2)

merged_krill_data <- read_csv(here::here("data/merged_krill_data.csv"))
head(merged_krill_data)

# Compute records per station
station_counts <- merged_krill_data %>%
  group_by(Station_ID) %>%
  summarise(Record_Count = n()) %>%
  arrange(desc(Record_Count))

# **Compute records per date**
date_counts <- merged_krill_data %>%
  group_by(Date) %>%
  summarise(Record_Count = n()) %>%
  arrange(Date)

# Plot station record count
ggplot(station_counts, aes(x = reorder(Station_ID, -Record_Count), y = Record_Count)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Record Count per Station ID", x = "Station ID", y = "Number of Records") +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

# Plot date record count
ggplot(date_counts, aes(x = Date, y = Record_Count)) +
  geom_line(color = "darkred") +
  geom_point(size = 2, color = "darkred") +
  labs(title = "Record Count Over Time", x = "Date", y = "Number of Records") +
  theme_minimal()
```
