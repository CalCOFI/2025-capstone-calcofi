# Preprocessing
```{r}
# Load in data
bottle_data <- read_csv(here::here("data/merged_bottle_co2sys.csv"))
krill_data <- read_csv(here::here("data/krill_data/BTEDB_Abundances.csv"))

head(bottle_data)
head(krill_data)

nrow(bottle_data) #4125
nrow(krill_data) #7482
```
```{r}
# Cleaning

## Make sure values are numeric
bottle_data <- bottle_data %>% mutate(DIC = as.numeric(DIC),
                                  TA = as.numeric(TA),
                                  Depth = as.numeric(Depth),
                                  CTDTEMP_ITS90 = as.numeric(CTDTEMP_ITS90),
                                  Salinity_PSS78 = as.numeric(Salinity_PSS78),
                                  Longitude = as.numeric(Longitude),
                                  Latitude = as.numeric(Latitude)
                                  )

## Create `Station_ID` variable in krill dataset by merging `Line` and `Station`
krill_data$Station_ID <- paste(
  sprintf('%05.1f', krill_data$Line),
  sprintf('%05.1f', as.numeric(krill_data$Station)),
  sep = ' '
)

krill_data <- krill_data %>%
  relocate(Station_ID, .before = Line)

## Separating `Date` into Year, Month, and Day variables
krill_data <- krill_data %>%
  mutate(
    Year_UTC = year(Date),
    Month_UTC = month(Date),
    Day_UTC = day(Date),
    .after = Date
  )

head(krill_data)
```

```{r}
num_cc<- bottle_data[,c("Date_cc", "Year_UTC", "Month_UTC", "Day_UTC", "Station_ID", 
                      "Latitude", "Longitude", "TA", "DIC", "Depth", 
                      "CTDTEMP_ITS90", "Salinity_PSS78", "pHin", "pHout")]

monthly_bottle_data <- num_cc %>% group_by(Year_UTC, Month_UTC, Station_ID) %>% 
  summarise(across(everything(), mean),
            .groups = 'drop')  %>%
  as.data.frame()

# Merged data
merged_krill <- inner_join(
  monthly_bottle_data, 
  krill_data,
  by = join_by(Year_UTC == Year_UTC, Month_UTC == Month_UTC, Station_ID == Station_ID)
)
nrow(merged_krill) #104

#write_csv(CV_merged_krill, here::here("data/CV_merged_krill.csv"))

## Remove NaN values for pH (in and out)
merged_krill <- merged_krill %>% filter(is.na(pHin) == F | is.na(pHout) == F)
head(merged_krill)
nrow(merged_krill) #70


## Remove columns (taxa) if all abundance values = 0
# merged_krill <- merged_krill %>% select(1:27, which(colSums(.[, 28:252]) != 0) + 27)
# dim(merged_krill)

# Create Total_Abundance
merged_krill <- merged_krill %>%
  mutate(Total_Abundance = rowSums(across(28:last_col()), na.rm = TRUE))

```

```{r}
# Look at krill species that Erin mentioned
# ***Refer to paper!!!
taxa_data <- merged_krill %>% select(1:27, starts_with("Euphausia_pacifica"), starts_with("Thysanoessa_spinifera"), starts_with("Nyctiphanes_simplex"), starts_with("Euphausia_eximia"), starts_with("Euphausia_gibboides"), starts_with("Euphausia_recurva"), starts_with("Stylocheiron_affine"), starts_with("Euphausia_hemigibba"), starts_with("Nematoscelis_difficilis"), starts_with("Thysanoessa_gregaria"))
head(taxa_data)

#write_csv(taxa_data, here::here("data/CV_krill_taxa_data.csv"))
```

```{r}
krill_taxa <- c("Euphausia_pacifica", "Thysanoessa_spinifera", "Nyctiphanes_simplex",
                "Euphausia_eximia", "Euphausia_gibboides", "Euphausia_recurva",
                "Stylocheiron_affine", "Euphausia_hemigibba", "Nematoscelis_difficilis",
                "Thysanoessa_gregaria")

for (taxon in krill_taxa) {
  matching_cols <- grep(paste0("^", taxon), names(merged_krill), value = TRUE)
  
  if (length(matching_cols) > 0) {
    merged_krill[[paste0(taxon, "_Total")]] <- rowSums(merged_krill[, matching_cols], na.rm = TRUE)
  }
}

# View the new columns
head(merged_krill)

select(merged_krill, contains("Total")) 

select(merged_krill, contains("Euphausia_pacifica")) 

merged_krill %>%
  filter(Euphausia_pacifica_Total == 0) # 90


```
```{r}
library(dplyr)

# Define krill taxa prefixes
krill_taxa <- c("Euphausia_pacifica", "Thysanoessa_spinifera", "Nyctiphanes_simplex",
                "Euphausia_eximia", "Euphausia_gibboides", "Euphausia_recurva",
                "Stylocheiron_affine", "Euphausia_hemigibba", "Nematoscelis_difficilis",
                "Thysanoessa_gregaria")

# Get column names that start with each taxon
taxa_columns <- lapply(krill_taxa, function(taxa) {
  select(merged_krill, starts_with(taxa)) %>% names()
})

# Print result
names(taxa_columns) <- krill_taxa
print(taxa_columns)

```

```{r}

# Identify all columns that contain "Total" in their name
total_columns <- names(merged_krill)[grepl("Total", names(merged_krill))]

# Create a data frame showing the count of zeros for each "Total" column
zero_counts_table <- data.frame(
  Column_Name = total_columns,
  Zero_Count = sapply(total_columns, function(col) sum(merged_krill[[col]] == 0, na.rm = TRUE))
)

# Display the table
print(zero_counts_table)

library(knitr)
library(kableExtra)
kable(zero_counts_table, caption = "Number of Zero Observations in Total Abundance per Taxa", row.names = F)

zero_counts_table %>%
  kbl(caption = "Number of Zero Observations in Total Abundance per Taxa", row.names = F) %>%
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed", "responsive"))



```

```{r}
head(merged_krill)
krill_taxa_data <- merged_krill %>% select(1:27, starts_with("Euphausia_pacifica"), starts_with("Thysanoessa_spinifera"), starts_with("Nyctiphanes_simplex"), starts_with("Euphausia_eximia"), starts_with("Euphausia_gibboides"), starts_with("Euphausia_recurva"), starts_with("Stylocheiron_affine"), starts_with("Euphausia_hemigibba"), starts_with("Nematoscelis_difficilis"), starts_with("Thysanoessa_gregaria"))
head(krill_taxa_data)

totals_data <- merged_krill %>% select(1:27, starts_with("Euphausia_pacifica"), starts_with("Thysanoessa_spinifera"), starts_with("Nyctiphanes_simplex"), starts_with("Euphausia_eximia"), starts_with("Euphausia_gibboides"), starts_with("Euphausia_recurva"), starts_with("Stylocheiron_affine"), starts_with("Euphausia_hemigibba"), starts_with("Nematoscelis_difficilis"), starts_with("Thysanoessa_gregaria"), Total_Abundance)
```

```{r}
krill_total_data <- merged_krill %>% select(1:27, Total_Abundance)
head(krill_total_data)
```

# EDA

```{r}
krill_total_data %>%
  ggplot(aes(x=Total_Abundance, y=pHout)) +
  geom_jitter(width = 0.5, size = 1) +
  geom_smooth(method = "lm", se = F, col = "red") +
  labs(title = "pH vs. Total Krill Abundance")
cor(krill_total_data$Total_Abundance, krill_total_data$pHout)

# merged_krill %>%
#   ggplot(aes(x=Euphausia_pacifica_Total, y=pHout)) +
#   geom_jitter(width = 0.5, size = 1) +
#   geom_smooth(method = "lm", se = F, col = "red") +
#   labs(title = "pH vs. Total Krill Abundance")
# cor(krill_taxa_data$Euphausia_pacifica_Total, krill_total_data$pHout)
# 
# merged_krill %>%
#   ggplot(aes(x=Nematoscelis_difficilis_Total, y=pHout)) +
#   geom_jitter(width = 0.5, size = 1) +
#   geom_smooth(method = "lm", se = F, col = "red") +
#   labs(title = "pH vs. Total Krill Abundance")
# cor(krill_taxa_data$Nematoscelis_difficilis_Total, krill_total_data$pHout)
# 
# merged_krill %>%
#   ggplot(aes(x=Thysanoessa_gregaria_Total, y=pHout)) +
#   geom_jitter(width = 0.5, size = 1) +
#   geom_smooth(method = "lm", se = F, col = "red") +
#   labs(title = "pH vs. Total Krill Abundance")
# cor(krill_taxa_data$Thysanoessa_gregaria_Total, krill_total_data$pHout)
```

```{r}
library(ggplot2)

ggplot() + 
  geom_violin(data = krill_taxa_data, aes(x = "Euphausia pacifica", y = Euphausia_pacifica_Total), 
              fill = "blue", alpha = 0.5, color = "black") +
  geom_violin(data = krill_taxa_data, aes(x = "Nematoscelis difficilis", y = Nematoscelis_difficilis_Total), 
              fill = "red", alpha = 0.5, color = "black") +
  geom_violin(data = krill_taxa_data, aes(x = "Thysanoessa gregaria", y = Thysanoessa_gregaria_Total), 
              fill = "purple", alpha = 0.5, color = "black") +
  geom_violin(data = krill_total_data, aes(x = "Total_Abundance", y = Total_Abundance), 
              fill = "green", alpha = 0.5, color = "black") +
  labs(title = "Total Krill Abundance Distribution", x = "Taxa", y = "Abundance") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability



```

```{r}

ggplot() +
  geom_boxplot(data = krill_taxa_data, aes(x = "Euphausia_pacifica", y = Euphausia_pacifica_Total), 
               fill = "blue", alpha = 0.5, color = "black") +
  geom_boxplot(data = krill_taxa_data, aes(x = "Nematoscelis_difficilis", y = Nematoscelis_difficilis_Total), 
               fill = "red", alpha = 0.5, color = "black") +
  geom_boxplot(data = krill_taxa_data, aes(x = "Thysanoessa_gregaria", y = Thysanoessa_gregaria_Total), 
               fill = "purple", alpha = 0.5, color = "black") +
  geom_boxplot(data = krill_total_data, aes(x = "Total_Abundance", y = Total_Abundance), 
               fill = "green", alpha = 0.5, color = "black") +
  labs(title = "Total Krill Abundance Distribution", x = "Taxa", y = "Abundance") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability

```

```{r}
ggplot(krill_taxa_data, aes(x=Euphausia_pacifica_Total)) +
  geom_histogram(bins = 50) +
  theme_bw() +
  ggtitle("Distribution of Total Euphausia Pacifica Abundance") +
  labs(x="Total Euphausia Pacifica Abundance", y="Count")
```

```{r}
ggplot(krill_taxa_data, aes(x=Nematoscelis_difficilis_Total)) +
  geom_histogram(bins = 50) +
  theme_bw() +
  ggtitle("Distribution of Total Nematoscelis Difficilis Abundance") +
  labs(x="Total Nematoscelis Difficilis Abundance", y="Count")
```

```{r}
ggplot(krill_taxa_data, aes(x=Thysanoessa_gregaria_Total)) +
  geom_histogram(bins = 50) +
  theme_bw() +
  ggtitle("Distribution of Total Thysanoessa Gregaria Abundance") +
  labs(x="Total Thysanoessa Gregaria Abundance", y="Count")
```

```{r}
library(corrplot)
krill_total_data %>%
  select(TA, DIC, Depth, CTDTEMP_ITS90, Salinity_PSS78, pHout, MaxDepth, Total_Abundance) %>%
  cor(use = "pairwise.complete.obs") %>% 
  corrplot(type = "lower", diag = FALSE, addCoef.col = 1)

cor_matrix <- krill_taxa_data %>%
  select(TA, DIC, Depth, CTDTEMP_ITS90, Salinity_PSS78, pHout, MaxDepth, 
         Euphausia_pacifica_Total, Nematoscelis_difficilis_Total, Thysanoessa_gregaria_Total) %>%
  cor(use = "pairwise.complete.obs")

corrplot(cor_matrix, 
         type = "lower", 
         diag = FALSE, 
         addCoef.col = "black",
         tl.col = "black",
         tl.cex = 0.6,
         tl.srt = 45, 
         number.cex = 0.7,  
         mar = c(2, 2, 2, 2))    

cor_matrix <- totals_data %>%
  select(TA, DIC, Depth, CTDTEMP_ITS90, Salinity_PSS78, pHout, MaxDepth, 
         Euphausia_pacifica_Total, Nematoscelis_difficilis_Total, Thysanoessa_gregaria_Total, Total_Abundance) %>%
  cor(use = "pairwise.complete.obs")

corrplot(cor_matrix, 
         type = "lower", 
         diag = FALSE, 
         addCoef.col = "black",
         tl.col = "black",
         tl.cex = 0.6,
         tl.srt = 45, 
         number.cex = 0.5,  
         mar = c(2, 2, 2, 2))   
```
# Models
- time series
- linear/non-linear model
- glm/mixed effects model
objectives
- use variables to see how pH affects krill abundance
- use more observations to see what would be a good predictor for krill abundance
main datasets
-totals_data (contains carbonchem/oceanographic data, and the krill_total_data and krill_taxa_data)
-krill_total_data (Total_Abundance)
-krill_taxa_data (contains 10 taxa data including total per taxa, specifically looking at top 3 with least amount of 0 values)

```{r}
colnames(merged_krill)
#colnames(krill_total_data)
#colnames(krill_taxa_data)

#write_csv(merged_krill, here::here("data/CV_merged_krill.csv"))
```

```{r}
merged_krill <- read_csv(here::here("data/krill_data/CV_merged_krill.csv"))

total_krill_cor <- cor(merged_krill$Total_Abundance, merged_krill$pHout)
ggplot(merged_krill, aes(x = pHout, y = Total_Abundance)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Total Krill Abundance vs. pH", 
       caption = paste("Correlation Coefficient:", round(total_krill_cor, 3)))

total_ep_cor <- cor(merged_krill$Euphausia_pacifica_Total, merged_krill$pHout)
ggplot(merged_krill, aes(x = pHout, y = Euphausia_pacifica_Total)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Total Euphausia Pacifica Abundance vs. pH",
       caption = paste("Correlation Coefficient:", round(total_ep_cor, 3)))

total_nd_cor <- cor(merged_krill$Nematoscelis_difficilis_Total, merged_krill$pHout)
ggplot(merged_krill, aes(x = pHout, y = Nematoscelis_difficilis_Total)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Total Nematoscelis Difficilis Abundance vs. pH",
       caption = paste("Correlation Coefficient:", round(total_nd_cor, 3)))

total_tg_cor <- cor(merged_krill$Thysanoessa_gregaria_Total, merged_krill$pHout)
ggplot(merged_krill, aes(x = pHout, y = Thysanoessa_gregaria_Total)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(title = "Total Thysanoessa Gregaria Abundance vs. pH",
       caption = paste("Correlation Coefficient:", round(total_tg_cor, 3)))

cor_matrix <- merged_krill %>%
  select(TA, DIC, CTDTEMP_ITS90, Salinity_PSS78, pHout, 
         Euphausia_pacifica_Total, Nematoscelis_difficilis_Total, Thysanoessa_gregaria_Total, Total_Abundance) %>%
  cor(use = "pairwise.complete.obs")

corrplot(cor_matrix, 
         type = "lower", 
         diag = FALSE, 
         addCoef.col = "black",
         tl.col = "black",
         tl.cex = 0.6,
         tl.srt = 45, 
         number.cex = 0.5,  
         mar = c(2, 2, 2, 2)) 
```

# Total Abundance Models

```{r}
# lm1: Linear model with all predictors
total_clean <- merged_krill %>%
  select(TA, DIC, CTDTEMP_ITS90, Salinity_PSS78, pHout, Total_Abundance) %>%
  mutate(log_total_abundance = log1p(Total_Abundance)) %>%
  select(-Total_Abundance) %>% na.omit
nrow(total_clean)
lm1 <- lm(log_total_abundance ~ . , data = total_clean)
summary(lm1)
library(car)
vif(lm1)
```
```{r}
# lm2: Linear model with fewer predictors, taking into consideration interaction terms according to corr plot

library(leaps)
best_subsets <- regsubsets(log_total_abundance ~ ., 
                          data = total_clean,
                          nbest = 1,
                          nvmax = NULL,
                          force.in = NULL, force.out = NULL,
                          method = "exhaustive")
summary(best_subsets)
summary(best_subsets)$adjr2
```

```{r}
lm2 <- lm(log_total_abundance ~ DIC + CTDTEMP_ITS90 + Salinity_PSS78 + pHout, data = total_clean)
summary(lm2)
vif(lm2)
aic(lm2)
```

```{r}
# Packages for diagnostics
library(performance)
library(broom)
library(ggfortify)
# Diagnostics for lm1
check_model(lm1)
glance(lm1)
autoplot(lm1, ncol = 2)

# Diagnostics for lm2
check_model(lm2)
glance(lm2)
autoplot(lm2, ncol = 2)
```


```{r}
# trying gam model?
library(mgcv)
gam_model <- gam(log_total_abundance ~ s(pHout) + s(DIC) + s(CTDTEMP_ITS90) + s(Salinity_PSS78), data = total_clean)
summary(gam_model)
```

```{r}
# GLM model

# library(glmulti)
# glmulti_best_models <- glmulti(
#   log_total_abundance ~ DIC + TA + pHout + CTDTEMP_ITS90 + Salinity_PSS78,
#   data = total_clean,
#   level = 2,               # include pairwise interactions
#   method = "h",            # exhaustive search
#   crit = "aic",            # or "bic"
#   fitfunction = "lm"       # for linear models
# )

# ***lm3 BEST for Total_Abundance
# only interactions
lm3 <- lm(log_total_abundance ~
    pHout:DIC +
    CTDTEMP_ITS90:DIC +
    Salinity_PSS78:DIC,
  data = total_clean)
summary(lm3)
vif(lm3)

# Interpretation for lm3: This linear model explains ~25% of the variability in log-transformed total krill abundance and is statistically significant overall. The three interaction terms are all significant (with pH:DIC and temperature:DIC showing a positive interaction and salinity:DIC showing a negative interaction).

## interaction and main effects
# lm4 <- lm(log_total_abundance ~ 
#     pHout*DIC + 
#     CTDTEMP_ITS90*DIC + 
#     Salinity_PSS78*DIC,
#   data = total_clean)
# summary(lm4)
# vif(lm4)


```

```{r}
# Trying models by scaling carb chem variables
df_std <- merged_krill %>%
  dplyr::select(Total_Abundance, CTDTEMP_ITS90, pHout, TA, DIC, Salinity_PSS78) %>%
  drop_na() %>%
  mutate(
    log_total_abundance = log1p(Total_Abundance),  # log(1 + x)
    CTDTEMP_ITS90 = scale(CTDTEMP_ITS90)[,1],
    pHout = scale(pHout)[,1],
    TA = scale(TA)[,1],
    DIC = scale(DIC)[,1],
    Salinity_PSS78 = scale(Salinity_PSS78)[,1]
  )

# glmulti_best_models <- glmulti(
#   log_total_abundance ~ DIC + TA + pHout + CTDTEMP_ITS90 + Salinity_PSS78,
#   data = df_std,
#   level = 2,               # include pairwise interactions
#   method = "h",            # exhaustive search
#   crit = "aic",            # or "bic"
#   fitfunction = "lm"       # for linear models
# )

lm5 <- lm(log_total_abundance ~ DIC + CTDTEMP_ITS90 + Salinity_PSS78 + pHout, data = df_std)
summary(lm5)
```

# Total Euphausia Pacifica Models

```{r}
ep_clean <- merged_krill %>%
  dplyr::select(TA, DIC, CTDTEMP_ITS90, Salinity_PSS78, pHout, Euphausia_pacifica_Total) %>%
  mutate(log_ep_abundance = log1p(Euphausia_pacifica_Total)) %>%
  dplyr::select(-Euphausia_pacifica_Total) %>% na.omit
nrow(ep_clean)
```

```{r}
ep_best_subsets <- regsubsets(log_ep_abundance ~ ., 
                          data = ep_clean,
                          nbest = 1,
                          nvmax = NULL,
                          force.in = NULL, force.out = NULL,
                          method = "exhaustive")
summary(ep_best_subsets)
summary(ep_best_subsets)$adjr2
```

```{r}
# ep_lm1 <- lm(log_ep_abundance ~ DIC + CTDTEMP_ITS90 + Salinity_PSS78 + pHout, data = ep_clean)
# summary(ep_lm1)
# 
# ep_lm2 <- lm(log_ep_abundance ~ pHout*DIC + pHout*CTDTEMP_ITS90 + Salinity_PSS78*DIC + DIC*CTDTEMP_ITS90, data = ep_clean)
# summary(ep_lm2)


# library(glmulti)
# ep_glmulti_best_models <- glmulti(
#   log_ep_abundance ~ DIC + TA + pHout + CTDTEMP_ITS90 + Salinity_PSS78,
#   data = ep_clean,
#   level = 2,               # include pairwise interactions
#   method = "h",            # exhaustive search
#   crit = "aic",            # or "bic"
#   fitfunction = "lm"       # for linear models
# )

# *was best model but not anymore
ep_lm3 <- lm(
  log_ep_abundance ~ 
    DIC + 
    pHout + 
    CTDTEMP_ITS90 + 
    Salinity_PSS78 +
    pHout:DIC +
    CTDTEMP_ITS90:pHout +
    Salinity_PSS78:DIC +
    Salinity_PSS78:pHout,
  data = ep_clean
)

summary(ep_lm3)
aic(ep_lm3)

# Interpretation for ep_lm3: The model explains ~34% of the variation in euphausia pacifica abundance and is statistically significant. Both pH and DIC have positive effects on abundance, while temperature has a negative effect. However, these effects are modified by interactions: higher pH increases with DIC and temperature but is reduced at higher salinity and the positive effect of DIC is weakened when salinity is high. 

```

```{r}
# Trying models by scaling carb chem variables
df_std <- merged_krill %>%
  dplyr::select(Euphausia_pacifica_Total, CTDTEMP_ITS90, pHout, TA, DIC, Salinity_PSS78) %>%
  drop_na() %>%
  mutate(
    log_ep_abundance = log1p(Euphausia_pacifica_Total),  # log(1 + x)
    CTDTEMP_ITS90 = scale(CTDTEMP_ITS90)[,1],
    pHout = scale(pHout)[,1],
    TA = scale(TA)[,1],
    DIC = scale(DIC)[,1],
    Salinity_PSS78 = scale(Salinity_PSS78)[,1]
  )

glmulti_best_models <- glmulti(
  log_ep_abundance ~ DIC + TA + pHout + CTDTEMP_ITS90 + Salinity_PSS78,
  data = df_std,
  level = 2,               # include pairwise interactions
  method = "h",            # exhaustive search
  crit = "aic",            # or "bic"
  fitfunction = "lm"       # for linear models
)

# ***ep_lm4 best model
ep_lm4 <- lm(log_ep_abundance ~ DIC + pHout + pHout:DIC + CTDTEMP_ITS90:pHout + Salinity_PSS78:DIC + Salinity_PSS78:pHout, data = df_std)
summary(ep_lm4)
aic(ep_lm4)
vif(ep_lm4)

```

# Diagnostics for Best Performing Models (Total Abundance and Total EP Abundance)
```{r}
# Diagnostics for best performing model of total abundance (lm3)
check_model(lm3)
glance(lm3)
autoplot(lm3, ncol = 2)
aic(lm3)

#*Note lm3 is best model overall but only has interaction effects, lm2 is second best with no interaction effects only main effects

# Diagnostics for best performing model of total EP abundance (ep_lm4)
check_model(ep_lm4)
glance(ep_lm4)
autoplot(ep_lm4, ncol = 2)
```

```{r}
# Krill Total_Abudnance LASSO

#define response variable
y <- merged_krill$Total_Abundance

#define matrix of predictor variables
x <- data.frame(merged_krill[, c('CTDTEMP_ITS90', 'pHout', 'TA', 'DIC', 'Salinity_PSS78', 'Latitude.x', 'Longitude.x', 'Month_UTC', 'Year_UTC')]) %>%
  makeX(na.impute = TRUE, sparse = TRUE)

#perform k-fold cross-validation to find optimal lambda value
cv_model <- cv.glmnet(x, y, alpha = 1)

#find optimal lambda value that minimizes test MSE
best_lambda <- cv_model$lambda.min
best_lambda


#produce plot of test MSE by lambda value
plot(cv_model) 

#find coefficients of best model
best_model <- glmnet(x, y, alpha = 1, lambda = best_lambda)
coef(best_model)

#use fitted best model to make predictions
y_predicted <- predict(best_model, s = best_lambda, newx = x)

#find SST and SSE
sst <- sum((y - mean(y))^2)
sse <- sum((y_predicted - y)^2)

#find R-Squared
rsq <- 1 - sse/sst
rsq
```


# Zooplankton

```{r}
# Total Zooplankton
zooplankton <- read_csv("../data/zoop_data/zooplankton_pH.csv")
names(zooplankton)
total_zooplankton <- zooplankton %>% 
  dplyr::select(CTDTEMP_ITS90, Salinity_PSS78, DIC, TA, total_plankton, pHout) %>%
  drop_na() %>%
  mutate(log_total_plankton = log1p(total_plankton)) %>%
  dplyr::select(-total_plankton)
total_zooplankton_scaled <- zooplankton %>%
  dplyr::select(total_plankton, CTDTEMP_ITS90, pHout, TA, DIC, Salinity_PSS78) %>%
  drop_na() %>%
  mutate(
    log_total_plankton = log1p(total_plankton),  # log(1 + x)
    CTDTEMP_ITS90 = scale(CTDTEMP_ITS90)[,1],
    pHout = scale(pHout)[,1],
    TA = scale(TA)[,1],
    DIC = scale(DIC)[,1],
    Salinity_PSS78 = scale(Salinity_PSS78)[,1]
  ) %>%
  dplyr::select(-total_plankton)

total_zooplankton_best_models <- glmulti(
  log_total_plankton ~ .,
  data = total_zooplankton,
  level = 2,               # include pairwise interactions
  method = "h",            # exhaustive search
  crit = "aic",            # or "bic"
  fitfunction = "lm"       # for linear models
)

total_zooplankton_scaled_best_models <- glmulti(
  log_total_plankton ~ .,
  data = total_zooplankton_scaled,
  level = 2,               # include pairwise interactions
  method = "h",            # exhaustive search
  crit = "aic",            # or "bic"
  fitfunction = "lm"       # for linear models
)

# not scaled
total_zooplankton_lm1 <- lm(log_total_plankton ~ DIC + TA + Salinity_PSS78 + pHout:Salinity_PSS78, data = total_zooplankton)
summary(total_zooplankton_lm1)
aic(total_zooplankton_lm1)
vif(total_zooplankton_lm1)

# scaled
total_zooplankton_lm2 <- lm(log_total_plankton ~ pHout + TA + DIC, data = total_zooplankton_scaled)
summary(total_zooplankton_lm2)
aic(total_zooplankton_lm2)
vif(total_zooplankton_lm2)
```


```{r}
# Diagnostics for total zooplankton models
check_model(total_zooplankton_lm1)
glance(total_zooplankton_lm1)
autoplot(total_zooplankton_lm1, ncol = 2)

check_model(total_zooplankton_lm2)
glance(total_zooplankton_lm2)
autoplot(total_zooplankton_lm2, ncol = 2)
```

```{r}
# Small Zooplankton
small_zooplankton <- zooplankton %>% 
  dplyr::select(CTDTEMP_ITS90, Salinity_PSS78, DIC, TA, small_plankton, pHout) %>%
  drop_na() %>%
  mutate(log_small_plankton = log1p(small_plankton)) %>%
  dplyr::select(-small_plankton)
small_zooplankton_scaled <- zooplankton %>%
  dplyr::select(small_plankton, CTDTEMP_ITS90, pHout, TA, DIC, Salinity_PSS78) %>%
  drop_na() %>%
  mutate(
    log_small_plankton = log1p(small_plankton),  # log(1 + x)
    CTDTEMP_ITS90 = scale(CTDTEMP_ITS90)[,1],
    pHout = scale(pHout)[,1],
    TA = scale(TA)[,1],
    DIC = scale(DIC)[,1],
    Salinity_PSS78 = scale(Salinity_PSS78)[,1]
  ) %>%
  dplyr::select(-small_plankton)

small_zooplankton_best_models <- glmulti(
  log_small_plankton ~ .,
  data = small_zooplankton,
  level = 2,               # include pairwise interactions
  method = "h",            # exhaustive search
  crit = "aic",            # or "bic"
  fitfunction = "lm"       # for linear models
)

small_zooplankton_scaled_best_models <- glmulti(
  log_small_plankton ~ .,
  data = small_zooplankton_scaled,
  level = 2,               # include pairwise interactions
  method = "h",            # exhaustive search
  crit = "aic",            # or "bic"
  fitfunction = "lm"       # for linear models
)

# not scaled
small_zooplankton_lm1 <- lm(log_small_plankton ~ pHout + DIC:Salinity_PSS78 + pHout:TA, data = small_zooplankton)
summary(small_zooplankton_lm1)
aic(small_zooplankton_lm1)
vif(small_zooplankton_lm1)

# scaled
small_zooplankton_lm2 <- lm(log_small_plankton ~ pHout + TA + DIC + Salinity_PSS78, data = small_zooplankton_scaled)
summary(small_zooplankton_lm2)
aic(small_zooplankton_lm2)
vif(small_zooplankton_lm2)

bic(small_zooplankton_lm1)
bic(small_zooplankton_lm2)
```

# Zooplankton: GAM with Spatial Spline
```{r}
# Loading/filtering in data
total_zooplankton <- zooplankton %>% 
  dplyr::select(CTDTEMP_ITS90, Salinity_PSS78, DIC, TA, total_plankton, pHout, Latitude, Longitude) %>%
  drop_na() %>%
  mutate(log_total_plankton = log1p(total_plankton)) %>%
  dplyr::select(-total_plankton)

library(corrplot)
corrplot::corrplot(cor(total_zooplankton), method = "number", type = "lower")
```

```{r}
gam_mod1 <- gam(log_total_plankton ~ s(DIC) + s(TA) + s(Salinity_PSS78:TA) + s(DIC:Salinity_PSS78) + s(pHout) + s(Latitude) + s(Longitude), data = total_zooplankton)
summary(gam_mod1)

# total_zooplankton %>%
#   select(log_total_plankton, DIC, TA, Salinity_PSS78, pHout:Salinity_PSS78) %>%
#   pivot_longer(-log_total_plankton) %>%
#   ggplot((aes(log_total_plankton, value)) +
#   geom_smooth() +
#   facet_wrap(~name, scales = "free"))
```

#-----------------------------------------------------------
# 4/14 Prep

## Zooplankton models

### total_plankton


```{r}
total_zooplankton <- zooplankton %>% 
  dplyr::select(CTDTEMP_ITS90, Salinity_PSS78, DIC, TA, total_plankton, pHout, Latitude, Longitude, Year_UTC, Month_UTC, Station_ID) %>%
  drop_na() %>%
  mutate(log_total_plankton = log1p(total_plankton)) %>%
  dplyr::select(-total_plankton) %>%
  mutate(Station_ID = as.factor(Station_ID))
# 
# total_zooplankton <- zooplankton %>% 
#   dplyr::select(CTDTEMP_ITS90, Salinity_PSS78, DIC, TA, total_plankton, pHout, Latitude, Longitude, Year_UTC, Month_UTC) %>%
#   drop_na() %>%
#   mutate(log_total_plankton = log1p(total_plankton)) %>%
#   dplyr::select(-total_plankton) 
corrplot::corrplot(cor(total_zooplankton), method = "number", type = "lower")

# Best LM
summary(total_zooplankton_lm1)

# GAM model
gam_mod <- gam(log_total_plankton ~ te(Latitude, Longitude) +
                         s(pHout) +
                         DIC + TA +
                         s(Salinity_PSS78) +
                         pHout:Salinity_PSS78 +
                         s(Year_UTC) + s(Month_UTC),
    data = total_zooplankton)
summary(gam_mod)

# GAM model 2 (best, refer to GAM model 4)
gam_mod2 <- gam(log_total_plankton ~ te(Latitude, Longitude) +
                         s(pHout) +
                         DIC + TA +
                         s(Salinity_PSS78) +
                        #pHout:Salinity_PSS78 +
                         s(Year_UTC) + s(Month_UTC) + s(Station_ID, bs = "re"),
    data = total_zooplankton)
summary(gam_mod2)

# GAM model 3
gam_mod3 <- gam(log_total_plankton ~ s(Latitude) + s(Longitude) +
                         s(pHout) +
                         TA +
                         s(Salinity_PSS78) +
                        pHout:Salinity_PSS78 +
                         s(Year_UTC) + s(Month_UTC),
    data = total_zooplankton)
summary(gam_mod3)

aic(gam_mod)
aic(gam_mod2)
aic(gam_mod3)

vif(total_zooplankton_lm1)

test_lm <- gam(log_total_plankton ~ s(Latitude) + s(Longitude) + pHout + s(Year_UTC) + s(Month_UTC) + DIC, data = total_zooplankton)
summary(test_lm)

# GAM model 4 (use this one)
gam_model4 <- gam(
  log_total_plankton ~ 
    te(Latitude, Longitude) +
                  s(pHout) +
                  s(TA) + s(DIC) +
                  s(Salinity_PSS78) +
                  s(CTDTEMP_ITS90) +
                  s(Year_UTC) + s(Month_UTC) + s(Station_ID, bs = "re"),
  data = total_zooplankton,
)
summary(gam_model4)
```

### small_plankton

```{r}
small_zooplankton <- zooplankton %>% 
  dplyr::select(CTDTEMP_ITS90, Salinity_PSS78, DIC, TA, small_plankton, pHout, Latitude, Longitude, Year_UTC, Month_UTC, Station_ID) %>%
  drop_na() %>%
  mutate(log_small_plankton = log1p(small_plankton)) %>%
  dplyr::select(-small_plankton) %>%
  mutate(Station_ID = as.factor(Station_ID))

small_gam_mod <- gam(log_small_plankton ~ te(Latitude, Longitude) +
                         s(pHout) +
                        DIC:Salinity_PSS78 +
                       pHout:TA +
                         s(Year_UTC) + s(Month_UTC) + s(Station_ID, bs = "re"),
    data = small_zooplankton)
summary(small_gam_mod)
aic(small_gam_mod)

# use this
small_gam_mod2 <- gam(
  log_small_plankton ~ 
    te(Latitude, Longitude) +
                  s(pHout) +
                  s(TA) + s(DIC) +
                  s(Salinity_PSS78) +
                  s(CTDTEMP_ITS90) +
                  s(Year_UTC) + s(Month_UTC) + s(Station_ID, bs = "re"),
  data = small_zooplankton,
)
summary(small_gam_mod2)
aic(small_gam_mod2)

plot(small_gam_mod2, pages = 1, shade = TRUE, seWithMean = TRUE)
```


### total krill
```{r}
total_krill <- merged_krill %>% 
  dplyr::select(CTDTEMP_ITS90, Salinity_PSS78, DIC, TA, Total_Abundance, pHout, Latitude.x, Longitude.x, Year_UTC, Month_UTC, Station_ID) %>%
  drop_na() %>%
  mutate(log_total_krill = log1p(Total_Abundance)) %>%
  dplyr::select(-Total_Abundance) %>%
  mutate(Station_ID = as.factor(Station_ID))

krill_gam_mod <- gam(log_total_krill ~ te(Latitude.x, Longitude.x) +
                         s(pHout) +
                        pHout:DIC + CTDTEMP_ITS90:DIC + Salinity_PSS78:DIC +
                         s(Year_UTC) + s(Month_UTC) + s(Station_ID, bs = "re"),
    data = total_krill)
summary(krill_gam_mod)
aic(krill_gam_mod)
```