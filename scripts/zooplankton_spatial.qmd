```{r}
library(ggplot2)
library(ggmap)
library(RColorBrewer)
library(tidyverse)
library(sdmTMB)
library(mice)
```


```{r}
# original unmerged data
zoop <- read.csv('../data/zoop_data/Zooplankton-new.csv') %>%
  add_utm_columns(ll_names=c('longitude', 'latitude'), utm_names=c('X', 'Y')) %>%
  mutate(lon = round(longitude, 2), lat = round(latitude, 2), year = year(time))
```

```{r}
# bins for x, y coords
xbreaks <- seq(floor(min(zoop$latitude)), ceiling(max(zoop$latitude)), by = 0.75)
ybreaks <- seq(floor(min(zoop$longitude)), ceiling(max(zoop$longitude)), by = 0.75)

# allocate data points into bins
zoop$latbin <- xbreaks[cut(zoop$latitude, breaks = xbreaks, labels=F)]
zoop$longbin <- ybreaks[cut(zoop$longitude, breaks = ybreaks, labels=F)]

# avg total_plankton for each bin
zoop_agg <- aggregate(zoop[, 'total_plankton'], list(zoop$latbin, zoop$longbin), mean) %>%
  rename(latitude = Group.1, longitude = Group.2, total_plankton = x)
```


```{r}
# check for spatial patterns
total_plankton_map <- ggplot(zoop_agg, aes(longitude, latitude)) + 
  geom_point(aes(col = total_plankton), alpha = 0.7, size = 0.7) + 
  scale_color_viridis_c(option = 'viridis', name = 'Total Plankton') +
  coord_fixed() + 
  theme_minimal()

total_plankton_map
```

```{r}
api_key <- 'AIzaSyAOaUr5AdjGqdE3roRO-zKh51HizzuRC9I'
register_google(key = api_key)

ca_map <- get_map(location = c(lon = -125, lat = 30), maptype = 'satellite', zoom = 3)

ggmap(ca_map) + 
  geom_point(data = zoop_agg,
             aes(x = longitude, y = latitude, color = total_plankton),
             alpha = 0.7, size = 0.6) + 
  # scale_color_viridis_c(option = 'plasma', name = 'Total Plankton') +
  scale_color_gradient(low = '#FAFFE8', high = '#00FF99')
```


```{r}
zoop <- read.csv('../data/zoop_data/zooplankton_pH.csv') %>%
  add_utm_columns(ll_names=c('longitude', 'latitude'), utm_names=c('X', 'Y')) %>%
  mutate(lon = round(longitude, 2), lat = round(latitude, 2))
  # months since first observation
  # mutate(time = as.integer(difftime(Date, min(Date), units = 'days') / 30))   
```




```{r}
glimpse(pcod)
```

```{r}
glimpse(predictions)
```



Handle missing data in predictors
```{r}
# Removing all rows with NAs: 732 -> 486 obs
zoop_clean <- zoop %>%
  drop_na(total_plankton, pHout, T_degC, DIC, Salinity_PSS78)
```

```{r}
# Fill missing values
covars <- zoop[, c('pHout', 'T_degC', 'DIC', 'Salinity_PSS78')]

# predictive mean matching
imputed_vals <- mice(covars, method = 'pmm', m = 1, maxit = 5)

complete_covars <- complete(imputed_vals)

zoop[, c('pHout', 'T_degC', 'DIC', 'Salinity_PSS78')] <- complete_covars
```



```{r}
mesh <- make_mesh(zoop, c('X', 'Y'), cutoff=10)
plot(mesh)
```



Spatial model
Tweedie distribution: models overdispersed data
```{r}
model <- sdmTMB(
  data = zoop,
  formula = total_plankton ~ 1,
  mesh = mesh,
  family = tweedie(link = 'log'),
  spatial = 'on'
)

model
```

```{r}
tidy(model, conf.int = TRUE)
```

```{r}
zoop$resids <- residuals(model)

qqnorm(zoop$resids)
qqline(zoop$resids)
```

Plot Residuals
```{r}
ggplot(zoop, aes(X, Y, col = resids)) + 
  scale_color_gradient2() + 
  theme_minimal() + 
  geom_point() + 
  coord_fixed()
```


```{r}
zoop$total_plankton
```

```{r}
ggplot(data=zoop, aes(x=total_plankton)) + 
  geom_histogram()
```

```{r}
# Create raster plot
ggplot(zoop, aes(x = lon, y = lat, fill = total_plankton)) +
  geom_raster(interpolate = TRUE) +
  scale_fill_viridis_c(option = "plasma", name = "Total Plankton") +
  # facet_wrap(~ Year_UTC) +
  coord_fixed() +
  labs(
    title = "Spatial Distribution of Total Plankton",
    x = "Longitude",
    y = "Latitude"
  ) +
  theme_minimal()
```








# GAM spatial spline
```{r}

```








