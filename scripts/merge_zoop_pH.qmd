```{r}
library(ggplot2)
library(forecast)
library(lubridate)
library(zoo)
```


```{r}
# load new zooplankton data
zoop_data <- read.csv('../data/zoop_data/Zooplankton-new.csv')

# load carbonate chem bottle pH data
cc_data <- read.csv('../data/merged_bottle_co2sys.csv') # [-1,]
```

```{r}
head(cc_data)
```

```{r}
# format Station_ID column
zoop_data$Station_ID <- paste(
  sprintf('%05.1f', zoop_data$line),
  sprintf('%05.1f', zoop_data$station),
  sep = ' '
)
```


```{r}
# format date in carbonate chem data
cc_data <- cc_data %>%
  mutate(
    Date = as.Date(
      paste(Month_UTC, Day_UTC, Year_UTC, sep = "/"),
      tryFormats = c("%m/%d/%Y")
    ),
    .before = Year_UTC
  ) %>%
  mutate(
    Depth = as.double(Depth)
  )

# format date in zooplankton data
zoop_data$Date = as.Date(zoop_data$time)
```

# Monthly Average
```{r}
zoop_data$Month_UTC <- as.integer(format(zoop_data$Date, '%m'))
zoop_data$Year_UTC <- as.integer(format(zoop_data$Date, '%Y'))
```

```{r}
# numeric columns to be averaged
zoop_data_num_cols <- names(select_if(zoop_data, is.numeric))

# group zoop data by month
zoop_data_by_month <- zoop_data[, c('Station_ID', zoop_data_num_cols)] %>%
  group_by(Station_ID, Year_UTC, Month_UTC) %>%
  summarise(across(everything(), mean), .groups = 'drop', na.rm=TRUE)  %>%
  as.data.frame()
```

```{r}
# numeric columns to be averaged
cc_data_num_cols <- names(select_if(cc_data, is.numeric))

# group cc data by month
cc_data_by_month <- cc_data[, c('Station_ID', cc_data_num_cols)] %>%
  group_by(Station_ID, Year_UTC, Month_UTC) %>%
  summarise(across(everything(), mean), .groups = 'drop', na.rm=TRUE) %>%
  as.data.frame()
```

## Join Data
```{r}
merged_cc_zoop_data <- inner_join(
  cc_data_by_month,
  zoop_data_by_month,
  by = join_by(Station_ID, Year_UTC, Month_UTC)
)
```

```{r}
# save dataset
write.csv(merged_cc_zoop_data, '../data/zoop_data/zooplankton_pH.csv', row.names=FALSE)
```


# Quarterly Average
```{r}
# add quarter column to zooplankton data
zoop_data$Quarter <- ((zoop_data$Month_UTC - 1) %/% 3) + 1
```


```{r}
# numeric columns to be averaged
zoop_data_num_cols <- names(select_if(zoop_data, is.numeric))

# group zoop data by month
zoop_data_by_quarter <- zoop_data[, c('Station_ID', zoop_data_num_cols)] %>%
  group_by(Station_ID, Year_UTC, Quarter) %>%
  summarise(across(everything(), mean), .groups = 'drop', na.rm=TRUE)  %>%
  as.data.frame()
```


```{r}
# numeric columns to be averaged
cc_data_num_cols <- names(select_if(cc_data, is.numeric))

# group cc data by month
cc_data_by_quarter <- cc_data[, c('Station_ID', cc_data_num_cols)] %>%
  group_by(Station_ID, Year_UTC, Quarter) %>%
  summarise(across(everything(), mean), .groups = 'drop', na.rm=TRUE) %>%
  as.data.frame()
```

## Join Data
```{r}
merged_cc_zoop_data_quarter <- inner_join(
  cc_data_by_quarter,
  zoop_data_by_quarter,
  by = join_by(Station_ID, Year_UTC, Quarter)
)
```

```{r}
head(merged_cc_zoop_data_quarter)
```


# pH EDA
```{r}
merged_cc_zoop_data <- read.csv('../data/zoop_data/zooplankton_pH.csv')
```

```{r}
# monthly
merged_cc_zoop_data$Date <- as.Date(with(merged_cc_zoop_data, sprintf('%d-%02d-01', Year_UTC, Month_UTC)))

pH_ts <- as.ts(merged_cc_zoop_data$pHout, merged_cc_zoop_data$Date)
plot.ts(pH_ts)
```

```{r}
# quarterly
merged_cc_zoop_data_quarter$Date <- as.Date(with(merged_cc_zoop_data_quarter, sprintf('%d-%02d-01', Year_UTC, 3*Quarter-2)))

pH_ts_quarter <- as.ts(merged_cc_zoop_data_quarter$pHout, merged_cc_zoop_data_quarter$Date)
plot.ts(pH_ts_quarter)
```


```{r}
# monthly
ggplot(data = merged_cc_zoop_data, aes(x=pHout, y=small_plankton)) + 
  geom_point(size=1, shape=1) + 
  theme_minimal()
```


```{r}
# quarterly
ggplot(data = merged_cc_zoop_data_quarter, aes(x=pHout, y=small_plankton)) + 
  geom_point(size=1, shape=1) + 
  theme_minimal()
```

```{r}
total_ts <- ts(merged_cc_zoop_data$total_plankton,
               merged_cc_zoop_data$Date,
               frequency = 12)

png('../images/merged_zoop_EDA/total_plankton_ts_plot.png', width=800, height=500)
total_ts_plot <- plot.ts(total_ts, xaxt='n', ylab='Total Plankton', main='Total Plankton Time Series Plot')
dev.off()
```


## ARIMA
```{r}
ts_data <-  ts(merged_cc_zoop_data$small_plankton, 
               start = c(year(min(merged_cc_zoop_data$Date)), month(min(merged_cc_zoop_data$Date))),
               frequency=12)

decomp <- stl(ts_data, s.window='periodic')
plot(decomp)
```

```{r}
arima_fit <- auto.arima(total_ts)
summary(arima_fit)
```

```{r}
forecast_12 <- forecast(arima_fit, h=12)

png('../images/merged_zoop_EDA/total_plankton_forecast_plot.png', width=800, height=500)
autoplot(forecast_12) + 
  ylab('Total Plankton') + 
  xlab('Date') + 
  theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
dev.off()
```

```{r}
checkresiduals(arima_fit)
```


# ARIMAX
```{r}
xreg <- as.matrix(merged_cc_zoop_data$pHout)

fit_arimax <- auto.arima(ts_data, xreg=xreg)
summary(fit_arimax)
```

```{r}
future_pHout <- rep(tail(merged_cc_zoop_data$pHout, 1), 12)
forecast_arimax <- forecast(fit_arimax, xreg=future_pHout, h=12)

autoplot(forecast_arimax) + 
  ylab('Small Plankton') + 
  xlab('Date')
```

# Regression with ARIMA
```{r}
fit_reg_arima <- Arima(small_ts, xreg=xreg, order=c(2,1,1))
summary(fit_reg_arima)
```

```{r}
future_pHout <- rep(tail(merged_cc_zoop_data$pHout, 1), 12)
forecast_reg_arima <- forecast(fit_reg_arima, xreg=future_pHout, h=12)

autoplot(forecast_reg_arima) + 
  xlab('Date') + 
  ylab('Small Plankton')
```

